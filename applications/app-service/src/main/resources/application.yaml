server:
  port: ${SERVER_PORT:9000}
spring:
  application:
    name: "ConsumerApp"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
  webflux:
    base-path: /api/v1
adapter:
  restconsumer:
    timeout: 5000
    url: "https://rickandmortyapi.com/api"
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
cors:
  allowed-origins: "${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:8080}"
adapters:
  r2dbc:
    host: "${DB_HOST:localhost}"
    port: "${DB_PORT:5432}"
    database: "${DB_NAME:consumer_app_db}"
    schema: "${DB_SCHEMA:public}"
    username: "${DB_USERNAME:postgres}"
    password: "${DB_PASSWORD:postgres}"

jwt:
  secret: "${JWT_SECRET:ThisIsSecretForJWTHS512SignatureAlgorithmThatMUSTHave64ByteLength}"
  expiration: "${JWT_EXPIRATION:28800}"
  password:
    encoder:
      secret: "${JWT_ENCODER_SECRET:ruqwoierowrropqwirpoiwrwripworipwer}"
      iteration: "${JWT_ENCODER_ITERATION:33}"
      keyLength: "${JWT_ENCODER_KEY_LENGTH:256}"
logging:
  level:
    web: debug
    org.springframework.security: debug